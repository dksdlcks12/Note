- 재귀호출
    - 메서드 내부에서 자기 자신을 호출 하는 경우
    - 상속에서 실수 할 확률이 있다.
- 오버로딩
    - 메서드나 생성자가 같은 이름을 가지고 있고 매개변수의 갯수나 타입이 다른경우
- 가변인자
    - 타입... 변수명
    - 매개변수의 갯수를 0~n개
    - 가변인자를 사용한 메서드는 오버로딩은 안하는 것이 좋다.
- 변수의 초기화
    - 멤버변수(클래스변수와 인스턴스변수)와 배열의 초기화는 선택
    - 지역변수의 초기화는 필수
    - 초기화 방법
        - 명시적 초기화 : 선언과 동시에 초기화
        - 생성자 초기화
        - 초기화 블럭 : 공통으로 초기화 되는 부분이 있는 경우 사용하면 좋음
            - 클래스 초기화 블럭
                - static{ }
            - 인스턴스 초기화 블럭
                - { }
    - 초기화 시기
        - 클래스 초기화 : 클래스가 처음 로딩될 때
        - 인스턴스 초기화 : 인스턴스가 생성될 때 마다 각 인스턴스별로 초기화
    - 초기화 순서
        - 클래스 초기화
            - 기본값 -> 명시적 초기화 -> 클래스 초기화 블럭
        - 인스턴스 초기화
            - 기본값 -> 명시적 초기화 -> 인스턴스 초기화 블럭 -> 생성자
- 상속
    - 부모 클래스한테 멤버변수나 멤버 메소드를 물려 받는것
    - class Child(자식 클래스명) extends Parent(부모 클래스명){
          멤버 변수
          멤버 메서드
          생성자
      }
    - 자식 클래스는 부모 클래스의 public 또는 protected로 되어 있는 멤버 변수와 멤버 메서드를 사용할 수 있다.
    - 생성자와 초기화 블럭은 상속되지 않지만 부모의 생성자를 호출할 수 있다.
    - 포함관계 : 클래스A의 멤버변수로 클래스 B의 객체가 오는 것
        - A는 B이다 -> 상속관계 ) B : 부모클래스, A : 자식클래스
        - A는 B를 가지고 있다 -> 포함관계 ) A : 클래스, B : 멤버 변수
    - 상속과 포함의 차이
        - 상속은 자식이 사용할 수 없는 것 : private
        - 포함은 클래스가 멤버 변수에서 사용할 수 없는 것 : private || protected
        - 상속은 멤버변수(일반변수)를 사용하기 위해 초기화를 하지 않아도 된다.
        - 포함에서 멤버변수(객체)는 new를 이용하여 객체를 생성 후 해당 객체의 멤버변수(일반변수)를 사용할 수 있다.
    - 생성자 상속
        - super(매개변수);
        - 생성자 코드에서만 사용가능하다.
    - 상속의 사용 이유
        - 재사용성이 높다.
- 오버라이딩
    - 조건
        - 선언부가 같아야 한다.( ex. public static void main() )
            - 이름이 같아야 한다.
            - 매개변수가 같아야 한다.
            - 반환타입이 같아야 한다.
    - 접근 제어자는 상위 클래스위 메서드보다 좁은 범위로 변경 할 수 없다.
    - 상위 클래스의 메서드보다 많은 수의 예외를 선언할 수 없다.
    - 인스턴스메서드를 static메서드로 또는 그 반대로 변경 할 수 없다.
    - static는 다형성이 적용되지 않아 오버라이딩이 안되고 Hiding이 된다. 자바에서 Hiding은 추천하지 않는 방식 이다.
        - Hiding이란 : 자식의 멤버 (변수, 메서드) 와 부모의 멤버간의 서로 메서드를 가리는 것을 의미한다.

- packge
    - 비슷한 클래스끼리 묶어서 관리하기 편하도록 하는 디렉토리
- import

-제어자
    - static - 클래스의, 공통적인
        - 멤버면수 
        - 메서드
        - 초기화 블럭
    - final - 마지막의, 변경될 수 없는
        - 클래스 : 부모 클래스가 될 수 없다.
        - 메서드 : 오버라이딩을 통해 재정의 될 수 없다.
        - 멤버변수, 지역변수 : 변수->상수
    - abstract - 추상의, 미완성의

    - 접근 제어자
        - 사용 이유
            - 외부로부터 데이터를 보호하기 위해서
            - 외부에는 불필요한, 내부적으로만 사용되는, 부분을 감추기 위해서
- instanceof연산자
    - 참조변수가 참조하고 있는 인스턴스의 실제 타입(클래스명)을 알아보기 위해 사용
    - 참조변수 instanceof 타입(클래스명)
    - 리턴값은 boolean