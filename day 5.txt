- 객체지향프로그래밍 I
    - 클래스
        - 정의 : 객체(인스턴스)를 정의해 놓은 것
        - 용도 : 객체(인스턴스)를 생성하는데 사용
        - 구성요소
            - 멤버변수(ex 기계부품)
            - 메서드(ex 기능)
            - 생성자 : 멤버변수의 초기화
        - 접근제한자 class 클래스명{
              접근제한자 멤버변수;
              접근제한자 메서드;
              생성자
          }
        - 접근제한자(접근권한 부여)
            - public : 누구나 사용 가능
                - 클래스 : 무조건 파일명과 클래스가 같을 때
                - 멤버변수 : 주로 상수일 때
                - 메서드 : 대부분의 메서드
            - private: 해당 클래스만 사용 가능, 일반적으로 클래스에 붙이지는 않음
                - 멤버변수 : 대부분의 멤버변수
                - 메서드 : 다른 클래스에서 사용하는 메서드가 아닐 경우
            - protected : 해당 클래스+패키지+자식클래스(상속 받은 클래스)
            - default : 해당 클래스 + 패키지
    - 메서드          
        - 접근제한자 (static) 리턴타입 메서드명(매개변수들){
              구현;
              return 값;
          }
        - ex) 자판기            메서드
               돈, 메뉴          매개변수
               음료수            리턴타입
        - 매개변수 : 메서드를 실행하기 위해 피룡한 최소한의 정보
        - 리턴타입 : 메서드 종류 후 아렬주는 정보의 자료형

    - 생성자 : 멤버변수 초기화
      // 기본 생성자
          public 클래스명(){

          }
          생성자 오버로딩
          public 클래스명(매개변수){
              초기값
          }
	  아래의 조건을 만족하는 경우 이름이 같은 메서드나 생성자가 존재할 수 있다. 
              - 매개변수가 달라지는 경우
                  - 매개변수의 갯수가 달라지는 경우
                  - 매개변수의 타입이 달라지는 경우
변수
    - 일반변수 : 값을 저장하는 변수
    - 참조변수 : 인덱스를 저장하는 변수

    - 선언 위치에 따른 분류
        - 클래스 영역에 선언
            - 클래스변수(static) : 클래스가 메모리에 올라간 시점부터 생성
                - 클래스메서드
                    - 인스턴스(객체)없이 생성가능
                    - 클래스명.메서드
                    - 클래스 메서드에는 멤버변수, 멤버메서드를 사용 불가(인스턴스[객체]가 생성되기 전에 동작이 가능하므로) 
            - 객체변수 : 인스턴스가 생성된 시점 부터 생성
                - 객체메서드
                    - 클래스변수, 클래스메서드 사용 가능
            
        - 지역변수 : 변수 선언문이 수행 되는 시점부터 생성