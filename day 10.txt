- 다형성
    - 본래의 뜻은 여러 가지 형태를 가질 수 있는 능력을 의미
    - 자바에서는 한 타입의 참조변수로 여러 타입의 객체를 참조할 수 있도록 함으로써 다형성을 프로그램적으로 구현함
        - 조상클래스 타입의 참조변수로 자손클래스의 인스턴스를 참조할 수 있도록 하였다
        - 조상타입의 참조변수로 자손타입의 인스턴스를 참조할 수 있다.
        - 자손타입의 참조변수로 조상타입의 인스턴스를 참조할 수 없다.
    - 주로 리스트를 사용하여 데이터를 처리 할 경우 사용한다.
- 참조변수의 형변환
    - Up - Casting는 상위클래스가 하위클래스
- Instanceof 연산자
    - 형변환 가능 여부를 확인하는 연산자로 리턴값은 boolean이다.
    - 조건식은 확인할 (참조변수 Insatanceof 변환가능한지 확인할 타입)
- 추상클래스
    - 추상 메서드를 가진 클래스
        - abstract class 클래스명{
    - 추상 메서드
        - 메서드가 선언만 되어 있고 구현이 안된 메서드
            - abstract 리턴타입 메서드명(매개변수);
    - 추상 메서드가 있는 클래스를 상속 받으면 반드시 추상 메서드를 구현해야 한다.(오버라이딩)
    - 상위 클래스에서 상속 받았을 때 특정 메소드가 하위 클래스에서 자주 오버라이딩 된다면 해당 메소드는 주로 추상 메소드로 작성한다.
- 인터페이스
    - 상수와 추상 메서드만 가질 수 있다
    - 선언부 구성
        - interface 인터페이스이름 {
              public static fainal 타입 상수이름 = 값; - public static fainal는 생략 가능
              public abstract 메서드이름(매개변수목록); - 
    - 인터페이스를 사용하여 밑그림을 그림
    - 인터페이스는 자체적으로 사용할 수 없고 인터페이스를 구현한 클래스로 활용한다.(implements)
    - 인터페이스는 멤버 변수가 없기 때문에 기능을 메서드로 정리할 경우를 항상 염두해두고 작성해야 한다.

    - 인터페이스는 다중상속이 가능하다.
    - 클래스는 interface를 이용하여 구현도 가능하고 상속도 가능
    - class A extends (클래스)B implements (인터페이스)C{ }
    - 디폴트 메서드
        - default 타입 메서드명 ( ) { }
        - 주로 인터페이스를 수정하는 도중 추가로 들어가는 경우 사용
        - 인터페이스로 추가 하지만 클래스에서 구현을 안해도 오류 발생이 안됨.
- 내부 클래스(inner class)
    - 익명 클래스
        - 클래스의 이름이 없어서 1회용으로 사용됨
        - 인터페이스를 이용하여 구현한 클래스가 필요할 때
        - 어떤 메서드는 